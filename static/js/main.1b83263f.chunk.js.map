{"version":3,"sources":["reducers/bookReducers.js","contexts/BookContext.jsx","components/BookDetails.jsx","components/BookList.jsx","components/Bookform.jsx","components/Navbar.jsx","Home.js","components/History.jsx","components/EachBookDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["moment","require","bookReducer","state","action","type","createdAt","calendar","books","concat","title","book","author","id","uuidv4","filter","finishedAt","history","BookContext","createContext","BookContextProivider","props","booksState","localStorage","getItem","historyState","initialState","JSON","parse","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","children","BookDetails","useContext","className","Button","color","onClick","to","e","preventDefault","BookList","length","map","key","Bookform","useState","setTitle","setAuthor","onSubmit","Input","placeholder","inputProps","onChange","target","required","fullWidth","variant","style","marginTop","Navbar","Home","History","classes","makeStyles","theme","root","useStyles","item","List","ListItem","ListItemText","primary","secondary","EachBookDetail","match","params","padding","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b83263f.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nconst moment = require(\"moment\");\n\nexport const bookReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BOOK\":\n      const createdAt = moment().calendar();\n      return {\n        ...state,\n        books: state.books.concat({\n          title: action.book.title,\n          author: action.book.author,\n          id: uuidv4(),\n          createdAt,\n        }),\n      };\n\n    case \"REMOVE_BOOK\":\n      return {\n        ...state,\n        books: state.books.filter((book) => book.id !== action.id),\n      };\n\n    case \"ADD_HISTORY\":\n      const finishedAt = moment().calendar();\n\n      return {\n        ...state,\n        books: state.books.filter((book) => book.id !== action.id),\n        history: state.history.concat({\n          title: action.title,\n          author: action.author,\n          id: action.id,\n          finishedAt,\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { bookReducer } from \"../reducers/bookReducers\";\n\nexport const BookContext = createContext();\n\nconst BookContextProivider = (props) => {\n  const booksState = localStorage.getItem(\"books\");\n  const historyState = localStorage.getItem(\"history\");\n\n  const parcedBooksState = booksState ? JSON.parse(booksState) : [];\n  const parcedHistoryState = historyState ? JSON.parse(historyState) : [];\n\n  const initialState = {\n    books: parcedBooksState,\n    history: parcedHistoryState,\n  };\n\n  const [state, dispatch] = useReducer(bookReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"books\", JSON.stringify(state.books));\n  }, [state.books]);\n\n  useEffect(() => {\n    localStorage.setItem(\"history\", JSON.stringify(state.history));\n  }, [state.history]);\n\n  return (\n    <BookContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookContextProivider;\n","import React, { useContext } from \"react\";\nimport { BookContext } from \"../contexts/BookContext\";\nimport { Link } from \"react-router-dom\";\n\n//style\nimport Button from \"@material-ui/core/Button\";\n\nexport const BookDetails = ({ book }) => {\n  const { dispatch } = useContext(BookContext);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"ADD_HISTORY\",\n      id: book.id,\n      title: book.title,\n      author: book.author,\n    });\n  };\n\n  return (\n    <li>\n      <div className=\"title\">{book && book.title}</div>\n      <div className=\"author\">{book && book.author}</div>\n\n      <Button\n        color=\"primary\"\n        onClick={() => dispatch({ type: \"DETAIL_BOOK\", id: book.id })}\n      >\n        <Link to={book.id}> Detail</Link>\n      </Button>\n\n      <Button onClick={handleClick} color=\"primary\">\n        Done\n      </Button>\n\n      <Button\n        onClick={() => dispatch({ type: \"REMOVE_BOOK\", id: book.id })}\n        color=\"secondary\"\n      >\n        Remove\n      </Button>\n    </li>\n  );\n};\n\nexport default BookDetails;\n","import React, { useContext } from \"react\";\nimport { BookContext } from \"../contexts/BookContext\";\nimport BookDetails from \"./BookDetails\";\n\nexport const BookList = () => {\n  const { state } = useContext(BookContext);\n  return state.books.length ? (\n    <div className=\"book-list\">\n      <ul>\n        {state.books.map((book) => {\n          return <BookDetails book={book} key={book.id} />;\n        })}\n      </ul>\n    </div>\n  ) : (\n    <div className=\"empty\">No books to read. Hello free time :)</div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { BookContext } from \"../contexts/BookContext\";\n\n//style\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const Bookform = () => {\n  const { dispatch } = useContext(BookContext);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"ADD_BOOK\",\n      book: {\n        title,\n        author,\n      },\n    });\n    setTitle(\"\");\n    setAuthor(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"title\"\n        inputProps={{ \"aria-label\": \"description\" }}\n        onChange={(e) => setTitle(e.target.value)}\n        required\n        value={title}\n        fullWidth={true}\n      />\n\n      <Input\n        placeholder=\"author\"\n        inputProps={{ \"aria-label\": \"aaa\" }}\n        onChange={(e) => setAuthor(e.target.value)}\n        required\n        value={author}\n        fullWidth={true}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        value=\"add book\"\n        style={{ marginTop: \"10px\" }}\n      >\n        ADD\n      </Button>\n    </form>\n  );\n};\n\nexport default Bookform;\n","import React, { useContext } from \"react\";\nimport { BookContext } from \"../contexts/BookContext\";\nimport { Link } from \"react-router-dom\";\n\n//style\nimport Button from \"@material-ui/core/Button\";\n\nconst Navbar = () => {\n  const { state } = useContext(BookContext);\n\n  return (\n    <div className=\"navbar\">\n      <h1>Reading List</h1>\n      <p>currently you have {state.books.length} books to get through...</p>\n\n      <Button variant=\"book history\" color=\"primary\">\n        <Link to=\"/finished-booklist\">History</Link>\n      </Button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { BookList } from \"./components/BookList\";\nimport { Bookform } from \"./components/Bookform\";\nimport Navbar from \"./components/Navbar\";\n\nexport const Home = () => {\n  return (\n    <>\n      <Navbar />\n      <BookList />\n      <Bookform />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport { BookContext } from \"../contexts/BookContext\";\n\n//style\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nexport const History = () => {\n  const { state } = useContext(BookContext);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      color: \"black\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const item =\n    state.history.length === 0 ? (\n      <>\n        <p style={{ color: \"black\" }}>There is no history</p>\n        <Button color=\"primary\">\n          <Link to=\"/\">Back</Link>\n        </Button>\n      </>\n    ) : (\n      <>\n        <List className={classes.root}>\n          {state.history.map((item) => (\n            <ListItem key={item.id}>\n              <ListItemText primary={item.title} secondary={item.finishedAt} />\n              {/* title:{item.title}, author:{item.author}, finished at{\" \"} */}\n            </ListItem>\n          ))}\n        </List>\n        <Button color=\"primary\">\n          <Link to=\"/\">Back</Link>\n        </Button>\n      </>\n    );\n  return <>{item}</>;\n};\n\nexport default History;\n","import React, { useContext } from \"react\";\nimport { BookContext } from \"../contexts/BookContext\";\n\n//style\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nexport const EachBookDetail = (props) => {\n  const { state } = useContext(BookContext);\n  const id = props.match.params.id;\n  const item = state.books.filter((book) => book.id === id);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      color: \"black\",\n      padding: \"10px\",\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <>\n      <List className={classes.root}>\n        <p>{item[0] && item[0].author}</p>\n        <p>{item[0] && item[0].title}</p>\n        <p>created at {item[0] && item[0].createdAt}</p>\n      </List>\n      <Button color=\"primary\">\n        <Link to=\"/\">Back</Link>\n      </Button>\n    </>\n  );\n};\n\nexport default EachBookDetail;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport BookContextProivider from \"./contexts/BookContext\";\n\nimport Home from \"./Home\";\nimport History from \"./components/History\";\nimport EachBookDetail from \"./components/EachBookDetail\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <BookContextProivider>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/finished-bookList\" component={History} exact />\n            <Route path=\"/:id\" component={EachBookDetail} exact />\n          </Switch>\n        </BookContextProivider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}